# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ github.event.inputs.name }}"

量化代码
顶底背离的识别，并且在主图作出信号提示

指标配合超级短线指标副图共同使用，可事半功倍


主图源代码：
var1=(2*close+high+low)/4;

var2=ema(ema(ema(var1,4),4),4);

指标=(var2-ref(var2,1))/ref(var2,1)*100;

快线=ma(指标,1);

慢线=ma(指标,3);



a1=barsFromPrevTrue(refBefore(isCrossUp(快线,慢线),1));

底背离=refBefore(close,a1 + 1) > close && 快线 > refBefore(快线,a1 + 1) && isCrossUp(快线,慢线);

drawText(底背离,low,"↑",y=10,color="red");

drawText(底背离,low,"底背离",y=30,color="red",size=13);



a2=barsFromPrevTrue(refBefore(isCrossUp(慢线,快线),1));

顶背离=refBefore(close,a2 + 1) < close && 快线 < refBefore(快线,a2 + 1) > 快线 && isCrossUp(慢线,快线);

drawText(顶背离,high,"↓",y=-10,color="white");

drawText(顶背离,high,"顶背离",y=-30,color="white",size=13);



副图源代码：
var1=(2*close+high+low)/4;

var2=ema(ema(ema(var1,4),4),4);

指标=(var2-ref(var2,1))/ref(var2,1)*100;

快线=ma(指标,1);

慢线=ma(指标,3);

//副图输出

drawHistogramBetweenIf(指标>0,指标,0,color="red", transp=0.9);

drawHistogramBetweenIf(指标<0,指标,0,color="green", transp=0.9);

draw(0, color="white", showpricevalue=true, showtitle=true, transp=0.5);

draw(慢线, color="yellow", showpricevalue=true, showtitle=true, linewidth=2, transp=1);

draw(快线, color="MediumOrchid", showpricevalue=true, showtitle=true, linewidth=2,transp=1);
